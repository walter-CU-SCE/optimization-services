/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton interface for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ATTRIBUTETEXT = 258,
     ELEMENTTEXT = 259,
     INTEGER = 260,
     DOUBLE = 261,
     QUOTE = 262,
     GREATERTHAN = 263,
     ENDOFELEMENT = 264,
     OSOLSTART = 265,
     OSOLATTRIBUTETEXT = 266,
     OSOLEND = 267,
     LOCATIONTYPEATT = 268,
     TRANSPORTTYPEATT = 269,
     NUMBEROFJOBIDSATT = 270,
     NUMBEROFPATHSATT = 271,
     NUMBEROFPROCESSESATT = 272,
     NUMBEROFVARIABLESATT = 273,
     NUMBEROFOBJECTIVESATT = 274,
     NUMBEROFCONSTRAINTSATT = 275,
     NUMBEROFOTHEROPTIONSATT = 276,
     NUMBEROFOTHERVARIABLEOPTIONSATT = 277,
     NUMBEROFOTHEROBJECTIVEOPTIONSATT = 278,
     NUMBEROFOTHERCONSTRAINTOPTIONSATT = 279,
     NUMBEROFVARATT = 280,
     NUMBEROFOBJATT = 281,
     NUMBEROFCONATT = 282,
     NAMEATT = 283,
     IDXATT = 284,
     VALUEATT = 285,
     DESCRIPTIONATT = 286,
     LBVALUEATT = 287,
     UBVALUEATT = 288,
     GENERALSTART = 289,
     GENERALEND = 290,
     SYSTEMSTART = 291,
     SYSTEMEND = 292,
     SERVICESTART = 293,
     SERVICEEND = 294,
     JOBSTART = 295,
     JOBEND = 296,
     OPTIMIZATIONSTART = 297,
     OPTIMIZATIONEND = 298,
     OTHERSTART = 299,
     OTHEREND = 300,
     SERVICEURISTART = 301,
     SERVICEURIEND = 302,
     SERVICENAMESTART = 303,
     SERVICENAMEEND = 304,
     CONTACTSTART = 305,
     CONTACTEND = 306,
     INSTANCENAMESTART = 307,
     INSTANCENAMEEND = 308,
     INSTANCELOCATIONSTART = 309,
     INSTANCELOCATIONEND = 310,
     JOBIDSTART = 311,
     JOBIDEND = 312,
     LICENSESTART = 313,
     LICENSEEND = 314,
     USERNAMESTART = 315,
     USERNAMEEND = 316,
     PASSWORDSTART = 317,
     PASSWORDEND = 318,
     MINDISKSPACESTART = 319,
     MINDISKSPACEEND = 320,
     MINMEMORYSIZESTART = 321,
     MINMEMORYSIZEEND = 322,
     MINCPUSPEEDSTART = 323,
     MINCPUSPEEDEND = 324,
     SERVICETYPESTART = 325,
     SERVICETYPEEND = 326,
     MAXTIMESTART = 327,
     MAXTIMEEND = 328,
     SCHEDULEDSTARTTIMESTART = 329,
     SCHEDULEDSTARTTIMEEND = 330,
     DEPENDENCIESSTART = 331,
     DEPENDENCIESEND = 332,
     REQDIRSTART = 333,
     REQDIREND = 334,
     PATHSTART = 335,
     PATHEND = 336,
     MAKEDIRSTART = 337,
     MAKEDIREND = 338,
     MAKEFILESTART = 339,
     MAKEFILEEND = 340,
     DELDIRSTART = 341,
     DELDIREND = 342,
     DELFILESTART = 343,
     DELFILEEND = 344,
     INPUTCOPYFROMSTART = 345,
     INPUTCOPYFROMEND = 346,
     INPUTCOPYTOSTART = 347,
     INPUTCOPYTOEND = 348,
     INPUTMOVEFROMSTART = 349,
     INPUTMOVEFROMEND = 350,
     INPUTMOVETOSTART = 351,
     INPUTMOVETOEND = 352,
     OUTPUTCOPYFROMSTART = 353,
     OUTPUTCOPYFROMEND = 354,
     OUTPUTCOPYTOSTART = 355,
     OUTPUTCOPYTOEND = 356,
     OUTPUTMOVEFROMSTART = 357,
     OUTPUTMOVEFROMEND = 358,
     OUTPUTMOVETOSTART = 359,
     OUTPUTMOVETOEND = 360,
     PROCESSESTOKILLSTART = 361,
     PROCESSESTOKILLEND = 362,
     PROCESSSTART = 363,
     PROCESSEND = 364,
     OPTIMIZATIONVARIABLESSTART = 365,
     OPTIMIZATIONVARIABLESEND = 366,
     INITIALVARIABLESSTART = 367,
     INITIALVARIABLESEND = 368,
     INITIALVARSTART = 369,
     INITIALVAREND = 370,
     OPTIMIZATIONOBJECTIVESSTART = 371,
     OPTIMIZATIONOBJECTIVESEND = 372,
     INITIALOBJVALUESSTART = 373,
     INITIALOBJVALUESEND = 374,
     OPTIMIZATIONINITIALOBJSTART = 375,
     OPTIMIZATIONINITIALOBJEND = 376,
     INITIALOBJBOUNDSSTART = 377,
     INITIALOBJBOUNDSEND = 378,
     OPTIMIZATIONCONSTRAINTSSTART = 379,
     OPTIMIZATIONCONSTRAINTSEND = 380,
     INITIALCONSTRAINTSSTART = 381,
     INITIALCONSTRAINTSEND = 382,
     INITIALCONSTART = 383,
     INITIALCONEND = 384,
     INITIALDUALSSTART = 385,
     INITIALDUALSEND = 386,
     DUMMY = 387
   };
#endif
/* Tokens.  */
#define ATTRIBUTETEXT 258
#define ELEMENTTEXT 259
#define INTEGER 260
#define DOUBLE 261
#define QUOTE 262
#define GREATERTHAN 263
#define ENDOFELEMENT 264
#define OSOLSTART 265
#define OSOLATTRIBUTETEXT 266
#define OSOLEND 267
#define LOCATIONTYPEATT 268
#define TRANSPORTTYPEATT 269
#define NUMBEROFJOBIDSATT 270
#define NUMBEROFPATHSATT 271
#define NUMBEROFPROCESSESATT 272
#define NUMBEROFVARIABLESATT 273
#define NUMBEROFOBJECTIVESATT 274
#define NUMBEROFCONSTRAINTSATT 275
#define NUMBEROFOTHEROPTIONSATT 276
#define NUMBEROFOTHERVARIABLEOPTIONSATT 277
#define NUMBEROFOTHEROBJECTIVEOPTIONSATT 278
#define NUMBEROFOTHERCONSTRAINTOPTIONSATT 279
#define NUMBEROFVARATT 280
#define NUMBEROFOBJATT 281
#define NUMBEROFCONATT 282
#define NAMEATT 283
#define IDXATT 284
#define VALUEATT 285
#define DESCRIPTIONATT 286
#define LBVALUEATT 287
#define UBVALUEATT 288
#define GENERALSTART 289
#define GENERALEND 290
#define SYSTEMSTART 291
#define SYSTEMEND 292
#define SERVICESTART 293
#define SERVICEEND 294
#define JOBSTART 295
#define JOBEND 296
#define OPTIMIZATIONSTART 297
#define OPTIMIZATIONEND 298
#define OTHERSTART 299
#define OTHEREND 300
#define SERVICEURISTART 301
#define SERVICEURIEND 302
#define SERVICENAMESTART 303
#define SERVICENAMEEND 304
#define CONTACTSTART 305
#define CONTACTEND 306
#define INSTANCENAMESTART 307
#define INSTANCENAMEEND 308
#define INSTANCELOCATIONSTART 309
#define INSTANCELOCATIONEND 310
#define JOBIDSTART 311
#define JOBIDEND 312
#define LICENSESTART 313
#define LICENSEEND 314
#define USERNAMESTART 315
#define USERNAMEEND 316
#define PASSWORDSTART 317
#define PASSWORDEND 318
#define MINDISKSPACESTART 319
#define MINDISKSPACEEND 320
#define MINMEMORYSIZESTART 321
#define MINMEMORYSIZEEND 322
#define MINCPUSPEEDSTART 323
#define MINCPUSPEEDEND 324
#define SERVICETYPESTART 325
#define SERVICETYPEEND 326
#define MAXTIMESTART 327
#define MAXTIMEEND 328
#define SCHEDULEDSTARTTIMESTART 329
#define SCHEDULEDSTARTTIMEEND 330
#define DEPENDENCIESSTART 331
#define DEPENDENCIESEND 332
#define REQDIRSTART 333
#define REQDIREND 334
#define PATHSTART 335
#define PATHEND 336
#define MAKEDIRSTART 337
#define MAKEDIREND 338
#define MAKEFILESTART 339
#define MAKEFILEEND 340
#define DELDIRSTART 341
#define DELDIREND 342
#define DELFILESTART 343
#define DELFILEEND 344
#define INPUTCOPYFROMSTART 345
#define INPUTCOPYFROMEND 346
#define INPUTCOPYTOSTART 347
#define INPUTCOPYTOEND 348
#define INPUTMOVEFROMSTART 349
#define INPUTMOVEFROMEND 350
#define INPUTMOVETOSTART 351
#define INPUTMOVETOEND 352
#define OUTPUTCOPYFROMSTART 353
#define OUTPUTCOPYFROMEND 354
#define OUTPUTCOPYTOSTART 355
#define OUTPUTCOPYTOEND 356
#define OUTPUTMOVEFROMSTART 357
#define OUTPUTMOVEFROMEND 358
#define OUTPUTMOVETOSTART 359
#define OUTPUTMOVETOEND 360
#define PROCESSESTOKILLSTART 361
#define PROCESSESTOKILLEND 362
#define PROCESSSTART 363
#define PROCESSEND 364
#define OPTIMIZATIONVARIABLESSTART 365
#define OPTIMIZATIONVARIABLESEND 366
#define INITIALVARIABLESSTART 367
#define INITIALVARIABLESEND 368
#define INITIALVARSTART 369
#define INITIALVAREND 370
#define OPTIMIZATIONOBJECTIVESSTART 371
#define OPTIMIZATIONOBJECTIVESEND 372
#define INITIALOBJVALUESSTART 373
#define INITIALOBJVALUESEND 374
#define OPTIMIZATIONINITIALOBJSTART 375
#define OPTIMIZATIONINITIALOBJEND 376
#define INITIALOBJBOUNDSSTART 377
#define INITIALOBJBOUNDSEND 378
#define OPTIMIZATIONCONSTRAINTSSTART 379
#define OPTIMIZATIONCONSTRAINTSEND 380
#define INITIALCONSTRAINTSSTART 381
#define INITIALCONSTRAINTSEND 382
#define INITIALCONSTART 383
#define INITIALCONEND 384
#define INITIALDUALSSTART 385
#define INITIALDUALSEND 386
#define DUMMY 387




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE

{
	double dval;
	int ival;
	char* sval;
}
/* Line 1529 of yacc.c.  */

	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


