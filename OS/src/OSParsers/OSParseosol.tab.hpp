/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton interface for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ATTRIBUTETEXT = 258,
     ELEMENTTEXT = 259,
     INTEGER = 260,
     DOUBLE = 261,
     QUOTE = 262,
     GREATERTHAN = 263,
     ENDOFELEMENT = 264,
     OSOLSTART = 265,
     OSOLATTRIBUTETEXT = 266,
     OSOLEND = 267,
     LOCATIONTYPEATT = 268,
     TRANSPORTTYPEATT = 269,
     NUMBEROFOTHEROPTIONSATT = 270,
     NUMBEROFJOBIDSATT = 271,
     NUMBEROFPATHSATT = 272,
     NUMBEROFPATHPAIRSATT = 273,
     FROMATT = 274,
     TOATT = 275,
     MAKECOPYATT = 276,
     SOLVERATT = 277,
     CATEGORYATT = 278,
     TYPEATT = 279,
     GROUPWEIGHTATT = 280,
     NUMBEROFPROCESSESATT = 281,
     NUMBEROFSOLVEROPTIONSATT = 282,
     NUMBEROFSOSATT = 283,
     NUMBEROFVARIABLESATT = 284,
     NUMBEROFOBJECTIVESATT = 285,
     NUMBEROFCONSTRAINTSATT = 286,
     NUMBEROFOTHERVARIABLEOPTIONSATT = 287,
     NUMBEROFOTHEROBJECTIVEOPTIONSATT = 288,
     NUMBEROFOTHERCONSTRAINTOPTIONSATT = 289,
     NUMBEROFVARATT = 290,
     NUMBEROFOBJATT = 291,
     NUMBEROFCONATT = 292,
     NAMEATT = 293,
     IDXATT = 294,
     SOSIDXATT = 295,
     VALUEATT = 296,
     UNITATT = 297,
     DESCRIPTIONATT = 298,
     LBVALUEATT = 299,
     UBVALUEATT = 300,
     LBDUALVALUEATT = 301,
     UBDUALVALUEATT = 302,
     GENERALSTART = 303,
     GENERALEND = 304,
     SYSTEMSTART = 305,
     SYSTEMEND = 306,
     SERVICESTART = 307,
     SERVICEEND = 308,
     JOBSTART = 309,
     JOBEND = 310,
     OPTIMIZATIONSTART = 311,
     OPTIMIZATIONEND = 312,
     SERVICEURISTART = 313,
     SERVICEURIEND = 314,
     SERVICENAMESTART = 315,
     SERVICENAMEEND = 316,
     INSTANCENAMESTART = 317,
     INSTANCENAMEEND = 318,
     INSTANCELOCATIONSTART = 319,
     INSTANCELOCATIONEND = 320,
     JOBIDSTART = 321,
     JOBIDEND = 322,
     SOLVERTOINVOKESTART = 323,
     SOLVERTOINVOKEEND = 324,
     LICENSESTART = 325,
     LICENSEEND = 326,
     USERNAMESTART = 327,
     USERNAMEEND = 328,
     PASSWORDSTART = 329,
     PASSWORDEND = 330,
     CONTACTSTART = 331,
     CONTACTEND = 332,
     OTHEROPTIONSSTART = 333,
     OTHEROPTIONSEND = 334,
     OTHERSTART = 335,
     OTHEREND = 336,
     MINDISKSPACESTART = 337,
     MINDISKSPACEEND = 338,
     MINMEMORYSIZESTART = 339,
     MINMEMORYSIZEEND = 340,
     MINCPUSPEEDSTART = 341,
     MINCPUSPEEDEND = 342,
     MINCPUNUMBERSTART = 343,
     MINCPUNUMBEREND = 344,
     SERVICETYPESTART = 345,
     SERVICETYPEEND = 346,
     MAXTIMESTART = 347,
     MAXTIMEEND = 348,
     SCHEDULEDSTARTTIMESTART = 349,
     SCHEDULEDSTARTTIMEEND = 350,
     DEPENDENCIESSTART = 351,
     DEPENDENCIESEND = 352,
     REQUIREDDIRECTORIESSTART = 353,
     REQUIREDDIRECTORIESEND = 354,
     REQUIREDFILESSTART = 355,
     REQUIREDFILESEND = 356,
     PATHSTART = 357,
     PATHEND = 358,
     PATHPAIRSTART = 359,
     PATHPAIREND = 360,
     DIRECTORIESTOMAKESTART = 361,
     DIRECTORIESTOMAKEEND = 362,
     FILESTOMAKESTART = 363,
     FILESTOMAKEEND = 364,
     DIRECTORIESTODELETESTART = 365,
     DIRECTORIESTODELETEEND = 366,
     FILESTODELETESTART = 367,
     FILESTODELETEEND = 368,
     INPUTDIRECTORIESTOMOVESTART = 369,
     INPUTDIRECTORIESTOMOVEEND = 370,
     INPUTFILESTOMOVESTART = 371,
     INPUTFILESTOMOVEEND = 372,
     OUTPUTDIRECTORIESTOMOVESTART = 373,
     OUTPUTDIRECTORIESTOMOVEEND = 374,
     OUTPUTFILESTOMOVESTART = 375,
     OUTPUTFILESTOMOVEEND = 376,
     PROCESSESTOKILLSTART = 377,
     PROCESSESTOKILLEND = 378,
     PROCESSSTART = 379,
     PROCESSEND = 380,
     VARIABLESSTART = 381,
     VARIABLESEND = 382,
     INITIALVARIABLEVALUESSTART = 383,
     INITIALVARIABLEVALUESEND = 384,
     VARSTART = 385,
     VAREND = 386,
     INITIALVARIABLEVALUESSTRINGSTART = 387,
     INITIALVARIABLEVALUESSTRINGEND = 388,
     INITIALBASISSTATUSSTART = 389,
     INITIALBASISSTATUSEND = 390,
     INTEGERVARIABLEBRANCHINGWEIGHTSSTART = 391,
     INTEGERVARIABLEBRANCHINGWEIGHTSEND = 392,
     SOSVARIABLEBRANCHINGWEIGHTSSTART = 393,
     SOSVARIABLEBRANCHINGWEIGHTSEND = 394,
     SOSSTART = 395,
     SOSEND = 396,
     OBJECTIVESSTART = 397,
     OBJECTIVESEND = 398,
     INITIALOBJECTIVEVALUESSTART = 399,
     INITIALOBJECTIVEVALUESEND = 400,
     OBJSTART = 401,
     OBJEND = 402,
     INITIALOBJECTIVEBOUNDSSTART = 403,
     INITIALOBJECTIVEBOUNDSEND = 404,
     CONSTRAINTSSTART = 405,
     CONSTRAINTSEND = 406,
     INITIALCONSTRAINTVALUESSTART = 407,
     INITIALCONSTRAINTVALUESEND = 408,
     CONSTART = 409,
     CONEND = 410,
     INITIALDUALVALUESSTART = 411,
     INITIALDUALVALUESEND = 412,
     SOLVEROPTIONSSTART = 413,
     SOLVEROPTIONSEND = 414,
     SOLVEROPTIONSTART = 415,
     SOLVEROPTIONEND = 416,
     DUMMY = 417
   };
#endif
/* Tokens.  */
#define ATTRIBUTETEXT 258
#define ELEMENTTEXT 259
#define INTEGER 260
#define DOUBLE 261
#define QUOTE 262
#define GREATERTHAN 263
#define ENDOFELEMENT 264
#define OSOLSTART 265
#define OSOLATTRIBUTETEXT 266
#define OSOLEND 267
#define LOCATIONTYPEATT 268
#define TRANSPORTTYPEATT 269
#define NUMBEROFOTHEROPTIONSATT 270
#define NUMBEROFJOBIDSATT 271
#define NUMBEROFPATHSATT 272
#define NUMBEROFPATHPAIRSATT 273
#define FROMATT 274
#define TOATT 275
#define MAKECOPYATT 276
#define SOLVERATT 277
#define CATEGORYATT 278
#define TYPEATT 279
#define GROUPWEIGHTATT 280
#define NUMBEROFPROCESSESATT 281
#define NUMBEROFSOLVEROPTIONSATT 282
#define NUMBEROFSOSATT 283
#define NUMBEROFVARIABLESATT 284
#define NUMBEROFOBJECTIVESATT 285
#define NUMBEROFCONSTRAINTSATT 286
#define NUMBEROFOTHERVARIABLEOPTIONSATT 287
#define NUMBEROFOTHEROBJECTIVEOPTIONSATT 288
#define NUMBEROFOTHERCONSTRAINTOPTIONSATT 289
#define NUMBEROFVARATT 290
#define NUMBEROFOBJATT 291
#define NUMBEROFCONATT 292
#define NAMEATT 293
#define IDXATT 294
#define SOSIDXATT 295
#define VALUEATT 296
#define UNITATT 297
#define DESCRIPTIONATT 298
#define LBVALUEATT 299
#define UBVALUEATT 300
#define LBDUALVALUEATT 301
#define UBDUALVALUEATT 302
#define GENERALSTART 303
#define GENERALEND 304
#define SYSTEMSTART 305
#define SYSTEMEND 306
#define SERVICESTART 307
#define SERVICEEND 308
#define JOBSTART 309
#define JOBEND 310
#define OPTIMIZATIONSTART 311
#define OPTIMIZATIONEND 312
#define SERVICEURISTART 313
#define SERVICEURIEND 314
#define SERVICENAMESTART 315
#define SERVICENAMEEND 316
#define INSTANCENAMESTART 317
#define INSTANCENAMEEND 318
#define INSTANCELOCATIONSTART 319
#define INSTANCELOCATIONEND 320
#define JOBIDSTART 321
#define JOBIDEND 322
#define SOLVERTOINVOKESTART 323
#define SOLVERTOINVOKEEND 324
#define LICENSESTART 325
#define LICENSEEND 326
#define USERNAMESTART 327
#define USERNAMEEND 328
#define PASSWORDSTART 329
#define PASSWORDEND 330
#define CONTACTSTART 331
#define CONTACTEND 332
#define OTHEROPTIONSSTART 333
#define OTHEROPTIONSEND 334
#define OTHERSTART 335
#define OTHEREND 336
#define MINDISKSPACESTART 337
#define MINDISKSPACEEND 338
#define MINMEMORYSIZESTART 339
#define MINMEMORYSIZEEND 340
#define MINCPUSPEEDSTART 341
#define MINCPUSPEEDEND 342
#define MINCPUNUMBERSTART 343
#define MINCPUNUMBEREND 344
#define SERVICETYPESTART 345
#define SERVICETYPEEND 346
#define MAXTIMESTART 347
#define MAXTIMEEND 348
#define SCHEDULEDSTARTTIMESTART 349
#define SCHEDULEDSTARTTIMEEND 350
#define DEPENDENCIESSTART 351
#define DEPENDENCIESEND 352
#define REQUIREDDIRECTORIESSTART 353
#define REQUIREDDIRECTORIESEND 354
#define REQUIREDFILESSTART 355
#define REQUIREDFILESEND 356
#define PATHSTART 357
#define PATHEND 358
#define PATHPAIRSTART 359
#define PATHPAIREND 360
#define DIRECTORIESTOMAKESTART 361
#define DIRECTORIESTOMAKEEND 362
#define FILESTOMAKESTART 363
#define FILESTOMAKEEND 364
#define DIRECTORIESTODELETESTART 365
#define DIRECTORIESTODELETEEND 366
#define FILESTODELETESTART 367
#define FILESTODELETEEND 368
#define INPUTDIRECTORIESTOMOVESTART 369
#define INPUTDIRECTORIESTOMOVEEND 370
#define INPUTFILESTOMOVESTART 371
#define INPUTFILESTOMOVEEND 372
#define OUTPUTDIRECTORIESTOMOVESTART 373
#define OUTPUTDIRECTORIESTOMOVEEND 374
#define OUTPUTFILESTOMOVESTART 375
#define OUTPUTFILESTOMOVEEND 376
#define PROCESSESTOKILLSTART 377
#define PROCESSESTOKILLEND 378
#define PROCESSSTART 379
#define PROCESSEND 380
#define VARIABLESSTART 381
#define VARIABLESEND 382
#define INITIALVARIABLEVALUESSTART 383
#define INITIALVARIABLEVALUESEND 384
#define VARSTART 385
#define VAREND 386
#define INITIALVARIABLEVALUESSTRINGSTART 387
#define INITIALVARIABLEVALUESSTRINGEND 388
#define INITIALBASISSTATUSSTART 389
#define INITIALBASISSTATUSEND 390
#define INTEGERVARIABLEBRANCHINGWEIGHTSSTART 391
#define INTEGERVARIABLEBRANCHINGWEIGHTSEND 392
#define SOSVARIABLEBRANCHINGWEIGHTSSTART 393
#define SOSVARIABLEBRANCHINGWEIGHTSEND 394
#define SOSSTART 395
#define SOSEND 396
#define OBJECTIVESSTART 397
#define OBJECTIVESEND 398
#define INITIALOBJECTIVEVALUESSTART 399
#define INITIALOBJECTIVEVALUESEND 400
#define OBJSTART 401
#define OBJEND 402
#define INITIALOBJECTIVEBOUNDSSTART 403
#define INITIALOBJECTIVEBOUNDSEND 404
#define CONSTRAINTSSTART 405
#define CONSTRAINTSEND 406
#define INITIALCONSTRAINTVALUESSTART 407
#define INITIALCONSTRAINTVALUESEND 408
#define CONSTART 409
#define CONEND 410
#define INITIALDUALVALUESSTART 411
#define INITIALDUALVALUESEND 412
#define SOLVEROPTIONSSTART 413
#define SOLVEROPTIONSEND 414
#define SOLVEROPTIONSTART 415
#define SOLVEROPTIONEND 416
#define DUMMY 417




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE

{
	double dval;
	int ival;
	char* sval;
}
/* Line 1529 of yacc.c.  */

	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


