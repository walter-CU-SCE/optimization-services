<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by Jun Ma (Northwestern University) -->
<xs:schema targetNamespace="os.optimizationservices.org" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="os.optimizationservices.org" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="OSnL.xsd"/>
	<xs:include schemaLocation="OSiL.xsd"/>
	<xs:element name="osgl"/>
	<xs:simpleType name="NumericType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="double"/>
			<xs:enumeration value="float"/>
			<xs:enumeration value="decimal"/>
			<xs:enumeration value="int"/>
			<xs:enumeration value="long"/>
			<xs:enumeration value="string"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="IntVector">
		<xs:choice>
			<xs:element name="el" maxOccurs="unbounded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
							<xs:attribute name="incr" type="xs:int" use="optional"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="base64BinaryData" type="Base64BinaryData"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="DoubleVector">
		<xs:choice>
			<xs:element name="el" maxOccurs="unbounded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:double">
							<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
							<xs:attribute name="incr" type="xs:double" use="optional"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="base64BinaryData" type="Base64BinaryData"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="El">
		<xs:sequence>
			<xs:element name="description" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:ID" use="required"/>
		<xs:attribute name="value" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:complexType name="MapType">
		<xs:sequence>
			<xs:element name="el" type="El" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Property">
		<xs:sequence minOccurs="0">
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:ID" use="required"/>
		<xs:attribute name="default" type="xs:string" use="optional"/>
		<xs:attribute name="isVariable" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="variableType" use="optional" default="C">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="C"/>
					<xs:enumeration value="B"/>
					<xs:enumeration value="I"/>
					<xs:enumeration value="S"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="PropertyRef">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:IDREF" use="required"/>
		<xs:attribute name="value" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="Base64BinaryData">
		<xs:simpleContent>
			<xs:extension base="xs:base64Binary">
				<xs:attribute name="sizeOf" type="xs:nonNegativeInteger" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="SparseVector">
		<xs:sequence>
			<xs:element name="idx" type="IntVector" maxOccurs="unbounded"/>
			<xs:element name="nonz" type="DoubleVector"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ListMatrix">
		<xs:sequence>
			<xs:element name="start" type="IntVector"/>
			<xs:choice>
				<xs:element name="rowIdx" type="IntVector"/>
				<xs:element name="colIdx" type="IntVector"/>
			</xs:choice>
			<xs:element name="value" type="DoubleVector"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MPSMatrix">
		<xs:choice>
			<xs:sequence>
				<xs:element name="col" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="row" maxOccurs="unbounded">
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:double">
											<xs:attribute name="idx" type="xs:nonNegativeInteger" use="required"/>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="idx" type="xs:nonNegativeInteger" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:sequence>
				<xs:element name="row" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="col" maxOccurs="unbounded">
								<xs:complexType>
									<xs:simpleContent>
										<xs:extension base="xs:double">
											<xs:attribute name="idx" type="xs:nonNegativeInteger" use="required"/>
										</xs:extension>
									</xs:simpleContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="idx" type="xs:nonNegativeInteger" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="BlockSizes">
		<xs:sequence>
			<xs:element name="el" maxOccurs="unbounded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:int">
							<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
							<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SemidefiniteMatrixElement">
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="row" type="xs:nonNegativeInteger" use="required"/>
				<xs:attribute name="col" type="xs:nonNegativeInteger" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="SemidefiniteMatrixBlock">
		<xs:sequence>
			<xs:element name="el" type="SemidefiniteMatrixElement" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="SemidefiniteMatrix">
		<xs:sequence>
			<xs:element name="block" type="SemidefiniteMatrixBlock" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="SemidefiniteBlocks">
		<xs:sequence>
			<xs:element name="blockSizes" type="BlockSizes"/>
			<xs:element name="matrix" type="SemidefiniteMatrix" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numMatrix" type="xs:positiveInteger" use="required"/>
		<xs:attribute name="numBlock" type="xs:positiveInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="MatrixMarketElement">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="row" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="col" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="value" type="xs:double" use="required"/>
	</xs:complexType>
	<xs:complexType name="MatrixMarket">
		<xs:sequence>
			<xs:element name="el" type="MatrixMarketElement" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="type" use="optional" default="general">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="general"/>
					<xs:enumeration value="symmetric"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="UserFunctions">
		<xs:sequence>
			<xs:element name="userFunction" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="OSnLNode"/>
					</xs:sequence>
					<xs:attribute name="name" type="xs:ID" use="required"/>
					<xs:attribute name="numArg" type="xs:nonNegativeInteger" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UserVariables">
		<xs:sequence>
			<xs:element name="userVariable" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="OSnLNode"/>
					</xs:sequence>
					<xs:attribute name="name" type="xs:ID" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="XMLData">
		<xs:sequence>
			<xs:any processContents="skip" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="JobDependencies">
		<xs:sequence>
			<xs:element name="jobID" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DirectoriesAndFiles">
		<xs:sequence>
			<xs:element name="path" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Processes">
		<xs:sequence>
			<xs:element name="process" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="News">
		<xs:sequence>
			<xs:element name="el" type="NewsElement" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NewsElement">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="time" type="xs:dateTime" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:group name="DistributionGroup">
		<xs:choice>
			<xs:group ref="DiscreteDistributionGroup"/>
			<xs:group ref="ContinuousDistributionGroup"/>
		</xs:choice>
	</xs:group>
	<xs:group name="DiscreteDistributionGroup">
		<xs:choice>
			<xs:element ref="empiricalDiscrete"/>
			<xs:element ref="discreteUniform"/>
			<xs:element ref="bernoulli"/>
			<xs:element ref="binomial"/>
			<xs:element ref="hypergeometric"/>
			<xs:element ref="poisson"/>
			<xs:element ref="geometric"/>
			<xs:element ref="negativeBinomial"/>
		</xs:choice>
	</xs:group>
	<xs:group name="ContinuousDistributionGroup">
		<xs:choice>
			<xs:element ref="empiricalContinuous"/>
			<xs:element ref="uniform"/>
			<xs:element ref="normal"/>
			<xs:element ref="stdNormal"/>
			<xs:element ref="exponential"/>
			<xs:element ref="weibull"/>
			<xs:element ref="erlang"/>
			<xs:element ref="gamma"/>
			<xs:element ref="beta"/>
			<xs:element ref="betaGeneral"/>
			<xs:element ref="lognormal"/>
			<xs:element ref="cauchy"/>
			<xs:element ref="t"/>
			<xs:element ref="chiSquare"/>
			<xs:element ref="f"/>
			<xs:element ref="logistic"/>
			<xs:element ref="logLogistic"/>
			<xs:element ref="logarithmic"/>
			<xs:element ref="pareto"/>
			<xs:element ref="rayleigh"/>
			<xs:element ref="pert"/>
			<xs:element ref="triangular"/>
		</xs:choice>
	</xs:group>
	<xs:group name="MultiDimensionalDistributionGroup">
		<xs:choice>
			<xs:element ref="multivariateDiscrete"/>
			<xs:element ref="multinomial"/>
			<xs:element ref="bivariateNormal"/>
			<xs:element ref="multivariateNormal"/>
			<xs:element ref="dirichlet"/>
		</xs:choice>
	</xs:group>
	<xs:complexType name="EmpiricalDiscreteElement">
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="prob" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:double">
							<xs:minInclusive value="0.0"/>
							<xs:maxInclusive value="1.0"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="EmpiricalDiscrete">
		<xs:sequence>
			<xs:element name="el" type="EmpiricalDiscreteElement" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:element name="empiricalDiscrete" type="EmpiricalDiscrete"/>
	<xs:complexType name="DiscreteUniform">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="N" type="xs:positiveInteger" use="required"/>
	</xs:complexType>
	<xs:element name="discreteUniform" type="DiscreteUniform"/>
	<xs:complexType name="Bernoulli">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="p" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
					<xs:maxInclusive value="1.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="bernoulli" type="Bernoulli"/>
	<xs:complexType name="Binomial">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="N" type="xs:positiveInteger" use="required"/>
		<xs:attribute name="p" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
					<xs:maxInclusive value="1.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="binomial" type="Binomial"/>
	<xs:complexType name="Hypergeometric">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="N" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="M" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="n" type="xs:positiveInteger" use="required"/>
	</xs:complexType>
	<xs:element name="hypergeometric" type="Hypergeometric"/>
	<xs:complexType name="Poisson">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="lambda" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="poisson" type="Poisson"/>
	<xs:complexType name="Geometric">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="p" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
					<xs:maxInclusive value="1.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="geometric" type="Geometric"/>
	<xs:complexType name="NegativeBinomial">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="p" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
					<xs:maxInclusive value="1.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="r" type="xs:positiveInteger" use="required"/>
	</xs:complexType>
	<xs:element name="negativeBinomial" type="NegativeBinomial"/>
	<xs:complexType name="EmpiricalContinuousElement">
		<xs:sequence>
			<xs:element ref="OSnLNode"/>
		</xs:sequence>
		<xs:attribute name="from" type="xs:double" use="required"/>
		<xs:attribute name="to" type="xs:double" use="required"/>
	</xs:complexType>
	<xs:complexType name="EmpiricalContinuous">
		<xs:sequence>
			<xs:element name="el" type="EmpiricalContinuousElement" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:element name="empiricalContinuous" type="EmpiricalContinuous"/>
	<xs:complexType name="Uniform">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="a" type="xs:double" use="required"/>
		<xs:attribute name="b" type="xs:double" use="required"/>
	</xs:complexType>
	<xs:element name="uniform" type="Uniform"/>
	<xs:complexType name="Normal">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="mu" type="xs:double" use="optional" default="0"/>
		<xs:attribute name="sigma" use="optional" default="1">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="normal" type="Normal"/>
	<xs:complexType name="StdNormal">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:element name="stdNormal" type="StdNormal"/>
	<xs:complexType name="Exponential">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="lambda" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="exponential" type="Exponential"/>
	<xs:complexType name="Weibull">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="location" type="xs:double" use="optional" default="0"/>
		<xs:attribute name="scale" type="xs:double" use="optional" default="1"/>
		<xs:attribute name="shape" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="weibull" type="Weibull"/>
	<xs:complexType name="Erlang">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="lambda" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="n" type="xs:positiveInteger" use="required"/>
	</xs:complexType>
	<xs:element name="erlang" type="Erlang"/>
	<xs:complexType name="Gamma">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="location" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="scale" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="shape" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="gamma" type="Gamma"/>
	<xs:complexType name="Beta">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="degree1" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="degree2" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="beta" type="Beta"/>
	<xs:complexType name="BetaGeneral">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="degree1" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="degree2" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="min" type="xs:double" use="required"/>
		<xs:attribute name="max" type="xs:double" use="required"/>
	</xs:complexType>
	<xs:element name="betaGeneral"/>
	<xs:complexType name="Lognormal">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="mu" type="xs:double" use="optional" default="0"/>
		<xs:attribute name="sigma" use="optional" default="1">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="lognormal" type="Lognormal"/>
	<xs:complexType name="Cauchy">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="location" type="xs:double" use="optional" default="0"/>
		<xs:attribute name="scale" use="optional" default="1">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="cauchy" type="Cauchy"/>
	<xs:complexType name="T">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="degree" type="xs:positiveInteger" use="required"/>
	</xs:complexType>
	<xs:element name="t" type="T"/>
	<xs:complexType name="ChiSquare">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="degree" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="chiSquare" type="ChiSquare"/>
	<xs:complexType name="F">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="degree1" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="degree2" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="f" type="F"/>
	<xs:complexType name="Logistics">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="mu" type="xs:double"/>
		<xs:attribute name="beta">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="logistic" type="Logistics"/>
	<xs:complexType name="LogLogistic">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="mu" type="xs:double"/>
		<xs:attribute name="beta">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="logLogistic" type="LogLogistic"/>
	<xs:complexType name="Logarithmic">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="a" type="xs:double"/>
		<xs:attribute name="b" type="xs:double"/>
	</xs:complexType>
	<xs:element name="logarithmic" type="Logarithmic"/>
	<xs:complexType name="Pareto">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="shape">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="scale">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minExclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="pareto" type="Pareto"/>
	<xs:complexType name="Rayleigh">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="beta">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="rayleigh" type="Rayleigh"/>
	<xs:complexType name="Pert">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="a" type="xs:double"/>
		<xs:attribute name="c" type="xs:double"/>
		<xs:attribute name="b" type="xs:double"/>
	</xs:complexType>
	<xs:element name="pert" type="Pert"/>
	<xs:complexType name="Triangular">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="a" type="xs:double"/>
		<xs:attribute name="c" type="xs:double"/>
		<xs:attribute name="b" type="xs:double"/>
	</xs:complexType>
	<xs:element name="triangular" type="Triangular"/>
	<xs:complexType name="MultivariateDiscreteScenario">
		<xs:sequence>
			<xs:element name="el" type="xs:double" minOccurs="2" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="prob" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
					<xs:maxInclusive value="1.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="MultivariateDiscrete">
		<xs:sequence>
			<xs:element name="scenario" type="MultivariateDiscreteScenario" minOccurs="2" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:element name="multivariateDiscrete" type="MultivariateDiscrete"/>
	<xs:complexType name="Multinomial">
		<xs:sequence>
			<xs:element name="el" maxOccurs="unbounded">
				<xs:simpleType>
					<xs:restriction base="xs:double">
						<xs:minInclusive value="0.0"/>
						<xs:maxInclusive value="1.0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="N" type="xs:positiveInteger"/>
	</xs:complexType>
	<xs:element name="multinomial" type="Multinomial"/>
	<xs:complexType name="BivariateNormal">
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="mu1" type="xs:double" use="optional" default="0"/>
		<xs:attribute name="sigma1" use="optional" default="1">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="mu2" type="xs:double" use="optional" default="0"/>
		<xs:attribute name="sigma2" use="optional" default="1">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="rho">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="-1.0"/>
					<xs:maxInclusive value="1.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="bivariateNormal" type="BivariateNormal"/>
	<xs:complexType name="MultivariateNormal">
		<xs:sequence>
			<xs:element name="mu" type="xs:double" minOccurs="3" maxOccurs="unbounded"/>
			<xs:element name="correlation" type="MatrixMarket"/>
		</xs:sequence>
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:element name="multivariateNormal" type="MultivariateNormal"/>
	<xs:complexType name="Dirichlet">
		<xs:sequence minOccurs="2" maxOccurs="unbounded">
			<xs:element name="shape" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:double">
						<xs:minInclusive value="0.0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="min" type="xs:double" default="0.0" minOccurs="0"/>
			<xs:element name="max" type="xs:double" default="1.0" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:element name="dirichlet" type="Dirichlet"/>
	<xs:complexType name="GeneralDistribution">
		<xs:sequence>
			<xs:element name="randomVariables" type="GeneralDistributionRandomVariables"/>
			<xs:element name="multivariate" type="GeneralDistributionMultivariate" minOccurs="0"/>
			<xs:element name="baseDistribution" type="GeneralDistributionBase" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariables">
		<xs:sequence>
			<xs:element name="rv" type="GeneralDistributionRandomVariable" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfRandomVariables" type="xs:nonNegativeInteger" use="optional" default="1"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariableMoment">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="order" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
		<xs:attribute name="central" type="xs:boolean" use="optional" default="true"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariableMoments">
		<xs:sequence>
			<xs:element name="moment" type="GeneralDistributionRandomVariableMoment" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfMoments" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariablePercentile">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="percent" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0"/>
					<xs:maxInclusive value="100"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariablePercentiles">
		<xs:sequence>
			<xs:element name="percentile" type="GeneralDistributionRandomVariablePercentile" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfPercentiles" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariableInterval">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="left" type="xs:string" use="required"/>
		<xs:attribute name="right" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="relative" type="xs:boolean" use="optional" default="true"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariableIntervals">
		<xs:sequence>
			<xs:element name="interval" type="GeneralDistributionRandomVariableInterval" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfIntervals" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariableCoefficientOfVariation">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariableMode">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariableTrimmedMean">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="alpha" use="optional" default="0">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0"/>
					<xs:maxInclusive value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="beta" use="optional" default="0">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0"/>
					<xs:maxInclusive value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionRandomVariable">
		<xs:all>
			<xs:element name="moments" type="GeneralDistributionRandomVariableMoments" minOccurs="0"/>
			<xs:element name="percentiles" type="GeneralDistributionRandomVariablePercentiles" minOccurs="0"/>
			<xs:element name="intervals" type="GeneralDistributionRandomVariableIntervals" minOccurs="0"/>
			<xs:element name="coefficientOfVariation" type="GeneralDistributionRandomVariableCoefficientOfVariation" minOccurs="0"/>
			<xs:element name="mode" type="GeneralDistributionRandomVariableMode" minOccurs="0"/>
			<xs:element name="trimmedMean" type="GeneralDistributionRandomVariableTrimmedMean" minOccurs="0"/>
		</xs:all>
		<xs:attribute name="name" type="xs:string" use="optional"/>
		<xs:attribute name="init" type="xs:double" use="optional"/>
		<xs:attribute name="initString" type="xs:string" use="optional"/>
		<xs:attribute name="type" use="optional" default="C">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="C"/>
					<xs:enumeration value="B"/>
					<xs:enumeration value="I"/>
					<xs:enumeration value="S"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="lb" type="xs:double" use="optional" default="-INF"/>
		<xs:attribute name="ub" type="xs:double" use="optional" default="INF"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariateSupport">
		<xs:sequence>
			<xs:element name="constraints" type="Constraints"/>
			<xs:element name="linearConstraintCoefficients" type="LinearConstraintCoefficients" minOccurs="0"/>
			<xs:element name="quadraticCoefficients" type="QuadraticCoefficients" minOccurs="0"/>
			<xs:element name="nonlinearExpressions" type="NonlinearExpressions" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="numberOfConstraints"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariateCorrelationsEl">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="row" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="col" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="value" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="-1"/>
					<xs:maxInclusive value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="lb" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="-1"/>
					<xs:maxInclusive value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="ub" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="-1"/>
					<xs:maxInclusive value="1"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariateCorrelations">
		<xs:sequence>
			<xs:element name="el" type="GeneralDistributionMultivariateCorrelationsEl" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="type" use="optional" default="general">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="general"/>
					<xs:enumeration value="symmetric"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariateCovariancesEl">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="row" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="col" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariateCovariances">
		<xs:sequence>
			<xs:element name="el" type="GeneralDistributionMultivariateCovariancesEl" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="type" use="optional" default="general">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="general"/>
					<xs:enumeration value="symmetric"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariateMixedMomentRandomVariable">
		<xs:attribute name="idx" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="order" type="xs:nonNegativeInteger" use="optional" default="1"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariateMixedMomentRandomVariables">
		<xs:sequence>
			<xs:element name="rv" type="GeneralDistributionMultivariateMixedMomentRandomVariable"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariateMixedMoment">
		<xs:sequence>
			<xs:element name="randomVariabls" type="GeneralDistributionMultivariateMixedMomentRandomVariables"/>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
		<xs:attribute name="central" type="xs:boolean" use="optional" default="true"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariateMixedMoments">
		<xs:sequence>
			<xs:element name="mixedMoment" type="GeneralDistributionMultivariateMixedMoment" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionMultivariate">
		<xs:all>
			<xs:element name="support" type="GeneralDistributionMultivariateSupport" minOccurs="0"/>
			<xs:element name="correlations" type="GeneralDistributionMultivariateCorrelations" minOccurs="0"/>
			<xs:element name="covariances" type="GeneralDistributionMultivariateCovariances" minOccurs="0"/>
			<xs:element name="mixedMoments" type="GeneralDistributionMultivariateMixedMoments" minOccurs="0"/>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionBaseParameter">
		<xs:sequence>
			<xs:element ref="OSnLNode" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="elementName" type="xs:string" use="optional"/>
		<xs:attribute name="elementIdx" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="attributeName" type="xs:string" use="optional"/>
		<xs:attribute name="subElementName" type="xs:string" use="optional"/>
		<xs:attribute name="subElementIdx" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="subElementAttributeName" type="xs:string" use="optional"/>
		<xs:attribute name="value" type="xs:double" use="optional"/>
		<xs:attribute name="valueString" type="xs:string" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
	</xs:complexType>
	<xs:complexType name="GeneralDistributionBase">
		<xs:sequence minOccurs="0">
			<xs:element name="distrParam" type="GeneralDistributionBaseParameter" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="distrName" type="xs:string" use="optional" default="unknown"/>
	</xs:complexType>
	<xs:element name="generalDistribution" type="GeneralDistribution"/>
	<xs:complexType name="RandomVariableUserFunction">
		<xs:attribute name="name" type="xs:IDREF" use="required"/>
	</xs:complexType>
	<xs:complexType name="RandomVariables">
		<xs:choice>
			<xs:group ref="MultiDimensionalDistributionGroup"/>
			<xs:element name="userF" type="RandomVariableUserFunction" maxOccurs="unbounded"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="LinearTransformation">
		<xs:sequence>
			<xs:element name="constants" type="DoubleVector"/>
			<xs:element name="matrix" type="MatrixMarket"/>
			<xs:element name="randomVariables" type="RandomVariables"/>
		</xs:sequence>
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="numberRows" type="xs:positiveInteger" use="required"/>
		<xs:attribute name="numberColumns" type="xs:positiveInteger" use="required"/>
	</xs:complexType>
	<xs:element name="linearTransformation" type="LinearTransformation"/>
	<xs:complexType name="NodeProperties">
		<xs:sequence>
			<xs:element name="property" type="Property" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ArcProperties">
		<xs:sequence>
			<xs:element name="property" type="Property" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NetworkAndGraphNode">
		<xs:sequence>
			<xs:element name="p" type="PropertyRef" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="NetworkAndGraphNodes">
		<xs:sequence>
			<xs:element name="node" type="NetworkAndGraphNode" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberNodes" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="declaration" use="optional" default="list">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="list"/>
					<xs:enumeration value="positiveInteger"/>
					<xs:enumeration value="declaredInArcs"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="axisType" use="optional" default="none">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="none"/>
					<xs:enumeration value="explicit"/>
					<xs:enumeration value="x"/>
					<xs:enumeration value="xy"/>
					<xs:enumeration value="xyz"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="NetworkAndGraphArc">
		<xs:sequence>
			<xs:element name="p" type="PropertyRef" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional"/>
		<xs:attribute name="tail" type="xs:int" use="optional"/>
		<xs:attribute name="head" type="xs:int" use="optional"/>
	</xs:complexType>
	<xs:complexType name="NetworkAndGraphArcs">
		<xs:sequence>
			<xs:element name="arc" type="NetworkAndGraphArc" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberArcs" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="declartion" use="optional" default="list">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="list"/>
					<xs:enumeration value="positiveInteger"/>
					<xs:enumeration value="betweenAllNodeParis"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="weightType" use="optional" default="none">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="none"/>
					<xs:enumeration value="explicit"/>
					<xs:enumeration value="euc2D"/>
					<xs:enumeration value="euc3D"/>
					<xs:enumeration value="max2D"/>
					<xs:enumeration value="max3D"/>
					<xs:enumeration value="man2D"/>
					<xs:enumeration value="man3D"/>
					<xs:enumeration value="ceil2D"/>
					<xs:enumeration value="geo"/>
					<xs:enumeration value="att"/>
					<xs:enumeration value="xray1"/>
					<xs:enumeration value="xray2"/>
					<xs:enumeration value="special"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="NetworkAndGraph">
		<xs:sequence>
			<xs:element name="nodeProperties" type="NodeProperties"/>
			<xs:element name="arcProperties" type="ArcProperties"/>
			<xs:element name="nodes" type="NetworkAndGraphNodes"/>
			<xs:element name="arcs" type="NetworkAndGraphArcs"/>
		</xs:sequence>
		<xs:attribute name="cdf" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="name" type="xs:string" use="optional"/>
		<xs:attribute name="type" use="optional" default="undirected">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="undirected"/>
					<xs:enumeration value="directed"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="hasVariableProperty" type="xs:boolean" use="optional" default="true"/>
	</xs:complexType>
	<xs:group name="NetworkAndGraphHeuristicsGroup">
		<xs:choice>
			<xs:element ref="minimumSpanningTree"/>
			<xs:element ref="steinerTree"/>
			<xs:element ref="shortestPath"/>
			<xs:element ref="maximumFlow"/>
			<xs:element ref="minimumCostFlow"/>
			<xs:element ref="maximumMatching"/>
			<xs:element ref="minimumWeightMatching"/>
			<xs:element ref="tJoin"/>
			<xs:element ref="eulerPath"/>
			<xs:element ref="hamiltonianPath"/>
			<xs:element ref="travellingSalesPerson"/>
			<xs:element ref="vehicleRouting"/>
			<xs:element ref="jobScheduling"/>
			<xs:element ref="clique"/>
			<xs:element ref="independentSet"/>
			<xs:element ref="vertexCover"/>
			<xs:element ref="vertexColoring"/>
			<xs:element ref="edgeColoring"/>
			<xs:element ref="vertexConnectivity"/>
			<xs:element ref="edgeConnectivity"/>
			<xs:element ref="connectedComponents"/>
			<xs:element ref="planarization"/>
			<xs:element ref="triangulation"/>
			<xs:element ref="graphIsomorphism"/>
			<xs:element ref="graphPartition"/>
			<xs:element ref="drawGraphNicely"/>
			<xs:element ref="drawTree"/>
			<xs:element ref="feedBackEdgeSet"/>
			<xs:element ref="feedBackVertexSet"/>
			<xs:element ref="transitiveClosure"/>
			<xs:element ref="transitiveReduction"/>
			<xs:element ref="topologicalSorting"/>
		</xs:choice>
	</xs:group>
	<xs:complexType name="MinimumSpanningTree">
		<xs:attribute name="costPropName" type="xs:IDREF" use="required"/>
	</xs:complexType>
	<xs:element name="minimumSpanningTree" type="MinimumSpanningTree"/>
	<xs:complexType name="SteinerTree">
		<xs:sequence minOccurs="0">
			<xs:element name="tNode" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="costPropName" type="xs:IDREF" use="optional"/>
	</xs:complexType>
	<xs:element name="steinerTree" type="SteinerTree"/>
	<xs:complexType name="ShortestPath">
		<xs:attribute name="costPropName" type="xs:IDREF" use="required"/>
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="end" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:element name="shortestPath" type="ShortestPath"/>
	<xs:complexType name="MaximumFlow">
		<xs:attribute name="capacityPropName" type="xs:IDREF" use="required"/>
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="end" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:element name="maximumFlow" type="MaximumFlow"/>
	<xs:complexType name="MinimumCostFlow">
		<xs:attribute name="costPropName" type="xs:IDREF" use="required"/>
		<xs:attribute name="capacityPropName" type="xs:IDREF" use="required"/>
		<xs:attribute name="demandPropName" type="xs:IDREF" use="required"/>
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="end" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:element name="minimumCostFlow" type="MinimumCostFlow"/>
	<xs:complexType name="MaximumMatchingLeftSet">
		<xs:sequence>
			<xs:element name="el" type="xs:nonNegativeInteger" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MaximumMatchingRightSet">
		<xs:sequence>
			<xs:element name="el" type="xs:nonNegativeInteger" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MaximumMatching">
		<xs:sequence>
			<xs:element name="leftSet" type="MaximumMatchingLeftSet" minOccurs="0"/>
			<xs:element name="rightSet" type="MaximumMatchingRightSet" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="maximumMatching" type="MaximumMatching"/>
	<xs:complexType name="MinimumWeightMatchingLeftSet">
		<xs:sequence>
			<xs:element name="el" type="xs:nonNegativeInteger" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MinimumWeightMatchingRightSet">
		<xs:sequence>
			<xs:element name="el" type="xs:nonNegativeInteger" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MinimumWeightMatching">
		<xs:sequence>
			<xs:element name="leftSet" type="MinimumWeightMatchingLeftSet" minOccurs="0"/>
			<xs:element name="rightSet" type="MinimumWeightMatchingRightSet" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="costPropName" type="xs:IDREF"/>
	</xs:complexType>
	<xs:element name="minimumWeightMatching" type="MinimumWeightMatching"/>
	<xs:complexType name="TJoin">
		<xs:sequence minOccurs="0">
			<xs:element name="tNode" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="costPropName" type="xs:IDREF" use="required"/>
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="end" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:element name="tJoin" type="TJoin"/>
	<xs:complexType name="EulerPath">
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="end" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:element name="eulerPath" type="EulerPath"/>
	<xs:complexType name="HamiltonianPath">
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="end" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:element name="hamiltonianPath" type="HamiltonianPath"/>
	<xs:complexType name="TravellingSalesPersonDepots">
		<xs:sequence>
			<xs:element name="depot" type="xs:nonNegativeInteger" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TravellingSalesPersonSubtours">
		<xs:sequence>
			<xs:element name="tour" type="xs:nonNegativeInteger" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TravellingSalesPersonTours">
		<xs:sequence>
			<xs:element name="subtours" type="TravellingSalesPersonSubtours" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TravellingSalesPerson">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="depots" type="TravellingSalesPersonDepots" minOccurs="0"/>
			<xs:element name="tours" type="TravellingSalesPersonTours" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="type" use="optional" default="symetricTSP">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="symetricTSP"/>
					<xs:enumeration value="asymetricTSP"/>
					<xs:enumeration value="probalisticTSP"/>
					<xs:enumeration value="SOP"/>
					<xs:enumeration value="HCP"/>
					<xs:enumeration value="CVRP"/>
					<xs:enumeration value="tour"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="costPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="capacityPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="demandPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="probPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="xPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="yPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="zPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="end" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:element name="travellingSalesPerson" type="TravellingSalesPerson"/>
	<xs:complexType name="VehicleRouting">
		<xs:sequence>
			<xs:element name="depot" type="xs:nonNegativeInteger" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="vehicleCapacity" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="demandPropName" type="xs:IDREF" use="required"/>
		<xs:attribute name="costPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="xPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="yPropName" type="xs:IDREF" use="optional"/>
	</xs:complexType>
	<xs:element name="vehicleRouting" type="VehicleRouting"/>
	<xs:complexType name="JobScheduling">
		<xs:attribute name="costPropName" type="xs:IDREF" use="optional"/>
	</xs:complexType>
	<xs:element name="jobScheduling" type="JobScheduling"/>
	<xs:complexType name="Clieque"/>
	<xs:element name="clique" type="Clieque"/>
	<xs:complexType name="IndependentSet"/>
	<xs:element name="independentSet" type="IndependentSet"/>
	<xs:complexType name="VertexCover"/>
	<xs:element name="vertexCover" type="VertexCover"/>
	<xs:complexType name="VertexColoring"/>
	<xs:element name="vertexColoring" type="VertexColoring"/>
	<xs:complexType name="EdgeColoring"/>
	<xs:element name="edgeColoring" type="EdgeColoring"/>
	<xs:complexType name="VertexConnectivity">
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="end" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:element name="vertexConnectivity" type="VertexConnectivity"/>
	<xs:complexType name="EdgeConnectivity">
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="end" type="xs:nonNegativeInteger" use="optional"/>
	</xs:complexType>
	<xs:element name="edgeConnectivity" type="EdgeConnectivity"/>
	<xs:complexType name="ConnectedComponents">
		<xs:attribute name="start" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:element name="connectedComponents" type="ConnectedComponents"/>
	<xs:complexType name="Planarization">
		<xs:attribute name="xPropName" type="xs:IDREF" use="required"/>
		<xs:attribute name="yPropName" type="xs:IDREF" use="required"/>
	</xs:complexType>
	<xs:element name="planarization" type="Planarization"/>
	<xs:complexType name="Triangulation"/>
	<xs:element name="triangulation" type="Triangulation"/>
	<xs:complexType name="GraphIsomorphism">
		<xs:attribute name="graphIDPropName" type="xs:IDREF" use="required"/>
	</xs:complexType>
	<xs:element name="graphIsomorphism" type="GraphIsomorphism"/>
	<xs:complexType name="GraphPartition">
		<xs:attribute name="costPropName" type="xs:IDREF" use="optional"/>
		<xs:attribute name="numSubset" type="xs:positiveInteger" use="required"/>
		<xs:attribute name="maxSubsetSize" type="xs:positiveInteger" use="required"/>
		<xs:attribute name="maxSubsetCost" type="xs:double" use="required"/>
	</xs:complexType>
	<xs:element name="graphPartition" type="GraphPartition"/>
	<xs:complexType name="DrawGraphNicely"/>
	<xs:element name="drawGraphNicely" type="DrawGraphNicely"/>
	<xs:complexType name="DrawTree"/>
	<xs:element name="drawTree" type="DrawTree"/>
	<xs:complexType name="FeedBackEdgeSet"/>
	<xs:element name="feedBackEdgeSet" type="FeedBackEdgeSet"/>
	<xs:complexType name="FeedBackVertexSet"/>
	<xs:element name="feedBackVertexSet" type="FeedBackVertexSet"/>
	<xs:complexType name="TransitiveClosure"/>
	<xs:element name="transitiveClosure" type="TransitiveClosure"/>
	<xs:complexType name="TransitiveReduction"/>
	<xs:element name="transitiveReduction" type="TransitiveReduction"/>
	<xs:complexType name="TopologicalSorting"/>
	<xs:element name="topologicalSorting" type="TopologicalSorting"/>
</xs:schema>
