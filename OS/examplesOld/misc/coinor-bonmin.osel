<?xml version="1.0" encoding="UTF-8"?><!--Sample XML file generated by XMLSPY v2004 rel. 3 U (http://www.xmlspy.com)--><osel xmlns="os.optimizationservices.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="os.optimizationservices.orghttp://www.optimizationservices.org/schemas/OSeL.xsd">	<entityHeader>		<serviceURI>http://www.coin-or.org/projects/Bonmin.os</serviceURI>		<serviceName>COIN-OR Bonmin Solver Service</serviceName>		<message>This is a mockup service</message>		<creationTime>2010-03-30T09:30:47-05:00</creationTime>		<registrationTime>2010-03-30T09:30:47-05:00</registrationTime>		<lastModificationTime>2010-03-30T09:30:47-05:00</lastModificationTime>		<licenseRequired>false</licenseRequired>		<userNameRequired>false</userNameRequired>		<passwordRequired>false</passwordRequired>		<keyWords numberOfKeyWords="2">			<keyWord>nonlinear programming</keyWord>			<keyWord>mixed integer</keyWord>			<keyWord>Bonmin</keyWord>		</keyWords>		<otherInformation numberOfOtherInfo="1">			<other name="COIN-OR Bonmin Project" link="https://projects.coin-or.org/Bonmin">COIN-OR Bonmin Project Home</other>		</otherInformation>	</entityHeader>	<entityData>		<provider>					<association type="company">						<name>COIN-OR</name>						<description><![CDATA[ The Computational Infrastructure for Operations Research (COIN-OR**, or simply COIN)  project is an initiative to spur the development of open-source software for the operations research community.Why open source? The Open Source Initiative explains it well. When people can read, redistribute, and modify the source code, software evolves. People improve it, people adapt it, people fix bugs.  The results of open-source development have been remarkable. Community-based efforts to develop software under open-source licenses have produced high-quality, high-performance code---code on which much of the Internet is run.Why for OR?  Consider the following scenario. You read about an optimization algorithm in the literature and you get an idea on how to improve it.  Today,  testing your new idea typically requires re-implementing (and re-debugging and re-testing) the original algorithm.  Often, clever implementation details aren't published. It can be difficult to replicate reported performance.  Now imagine the scenario if the original algorithm was publicly available in a community repository. Weeks of re-implementing would no longer be required. You would simply check out a copy of it for yourself and modify it.  Imagine the productivity gains from software reuse!Our goal is to create for mathematical software what the open literature is for mathematical theory.We are building an open-source community for operations research software in order to speed development and deployment of models, algorithms, and cutting-edge computational research, as well as provide a forum for peer review of software similar to that provided by archival journals for theoretical research.   This is a lofty goal, but we believe it's a worthwhile one.  We have ideas, but we don't have all the answers. Only the community of users and contributors can define what is needed to make it a reality. For further information, please see the FAQs page, as well as the COIN-OR resources page. 												]]></description>						<web>http://www.coin-or.org/</web>						<logoImageURL uri="http://www.coin-or.org/images/COIN-OR_CMYK-296.png">COIN-OR</logoImageURL>					</association>			<contacts numberOfContacts="1">				<contact isMain="true">					<name>						<lastName>Bonami</lastName>						<firstName>Pierre</firstName>					</name>					<role>Project Manager</role>					<description>I am a CNRS permanent researcher in operations research in the Laboratoire d'Informatique Fondamentale de Marseille at Université de la Mediterannée. I am a member of the research team CRO.										</description>					<address>Laboratoire d'Informatique Fondamentale de MarseilleParc Scientifique et Technologique de Luminy163 avenue de Luminy - Case 901F-13288 Marseille Cedex 9France										</address>					<phone>(33)4 91829317</phone>					<fax>(33)491829275</fax>					<web>http://pageperso.lif.univ-mrs.fr/~pierre.bonami/index.html</web>					<email>pierre.bonami@lif.univ-mrs.fr</email>					<association type="education">						<name>Laboratoire d'Informatique Fondamentale de Marseille at Université de la Mediterannée</name>						<phone>(33)491113600</phone>						<fax>(33)491113602</fax>						<web>http://www.lif.univ-mrs.fr/?lang=en</web>						<email>direction@lif.univ-mrs.fr</email>						<logoImageURL uri="http://www.lif.univ-mrs.fr/IMG/red.gif">Laboratoire d'Informatique Fondamentale de Marseille</logoImageURL>					</association>				</contact>			</contacts>			<keyWords numberOfKeyWords="4">				<keyWord>Laboratoire d'Informatique Fondamentale de Marseille</keyWord>				<keyWord>Université de la Mediterannée</keyWord>				<keyWord>COIN-OR</keyWord>			</keyWords>			<otherInformation numberOfOtherInfo="1">				<other name="COIN-OR Bomin Project" link="https://projects.coin-or.org/Bomin">COIN-OR Bomin Project</other>			</otherInformation>		</provider>		<system>			<description>This is a mock up</description>			<dedication isFullyDedicated="true">fully dedicated as a COIN server for Bonmin Optimization Services.</dedication>			<operatingSystem>Ubuntu Linux</operatingSystem>			<keyWords numberOfKeyWords="2">				<keyWord>Ubuntu</keyWord>				<keyWord>Linux</keyWord>			</keyWords>			<otherInformation numberOfOtherInfo="2">				<other name="Ubuntu Linux" link="http://www.ubuntu.com/">Ubuntu Linux</other>			</otherInformation>		</system>		<service>			<description>Bonmin solver service dedicated by COIN-OR</description>			<type>solver</type>			<wsdlLocation>http://www.coin-or.org/projects/Bonmin.os?wsdl</wsdlLocation>			<version>1.0</version>			<software>				<name>Bonmin</name>				<version>1.3</version>				<description>BONMIN (Basic Open-source Nonlinear Mixed INteger programming) is an open-source code for solving general MINLP (Mixed Integer NonLinear Programming) problems. It is distributed on COIN-OR under the CPL (Common Public License). Third-party Software:Package	Required/OptionalAmpl Solver Library 	OptionalBlas 	Required (any implementation)CPLEX 	OptionalLapack 	Optional (any implementation)MA27 	Required Development Status:Activity Status:	ActiveBuilds and Passes Unit Test On:Operating System	CompilerMicrosoft Windows	CYGWIN/g++Microsoft Windows	MSys/g++Linux	g++Mac OSX	g++				</description>				<author> Pierre Bonami</author>				<license>CPL</license>				<language>C++</language>				<algorithm><![CDATA[Bonmin is an experimental open-source C++ code for solving general MINLP (Mixed Integer NonLinear Programming) problems of the form:   min     f(x)s.t.       g_L <= g(x) <= g_U           x_L <=  x   <= x_U           x_i in Z for all i in I and,           x_i in R for all i not in I.where f(x): R^n --> R, g(x): R^n --> R^m are twice continuously differentiable functions and I is a subset of {1,..,n}.Bonmin features several algorithms    * B-BB is a NLP-based branch-and-bound algorithm,    * B-OA is an outer-approximation decomposition algorithm,    * B-QG is an implementation of Quesada and Grossmann's branch-and-cut algorithm,    * B-Hyb is a hybrid outer-approximation based branch-and-cut algorithm. The algorithms in Bonmin are exact when the functions f and g are convex; in the case where f or g or both are non-convex they are heuristics.  								]]></algorithm>				<otherInformation numberOfOtherInfo="3">					<other name="COIN-Bonmin Project" link="https://projects.coin-or.org/Bonmin">COIN-OR Bonmin</other>					<other name="COIN-Bonmin Documentation" link="http://www.coin-or.org/Bonmin/documentation/">A tutorial for downloading, installing, and using Bonmin.</other>					<other name="AMPL" link="http://www.ampl.com/">AMPL, A Modeling Language for Mathematical Programming</other>				</otherInformation>			</software>			<maxJobs>50</maxJobs>			<keyWords numberOfKeyWords="3">				<keyWord>MINLP</keyWord>				<keyWord>Pierre Bonami</keyWord>				<keyWord>COIN-OR</keyWord>			</keyWords>			<otherInformation numberOfOtherInfo="2">				<other name="COIN-OR Ipopt Solver Service" link="http://www.coin-or.org/projects/Ipopt.os?wsdl">COIN-OR Ipopt Service contributed from the same provider.</other>				<other name="COIN-OR Bomin User Guide" link="https://projects.coin-or.org/Bonmin/browser/stable/1.1/Bonmin/doc/BONMIN_UsersManual.pdf?format=raw">More information on Bonmin installation and usage can be found in the Bonmin User's Manual</other>			</otherInformation>		</service>		<job>			<description>The solver service takes almost any job, but no guarantee that a job will be successfully run`.</description>			<maxTime unit="hour">20</maxTime>			<systemRestriction/>			<keyWords numberOfKeyWords="0"/>			<otherInformation numberOfOtherInfo="0"/>		</job>		<optimization>			<problem>				<type>nonlinear mixed integer program</type>				<maxSize unit="byte">2048576</maxSize>				<keyWords numberOfKeyWords="2">					<keyWord>nonlinear</keyWord>					<keyWord>mixed integer</keyWord>				</keyWords>				<otherInformation numberOfOtherInfo="5">					<other name="integer program" link="http://en.wikipedia.org/wiki/Integer_programming">integer program</other>					<other name="nonlinear program" link="http://en.wikipedia.org/wiki/Nonlinear_programming">nonlinear program</other>					<other name="OSiL" link="http://www.optimizationservices.org/schemas/OSiL.xsd">Optimization Services instance Language</other>					<other name="OSoL" link="http://www.optimizationservices.org/schemas/OSoL.xsd">Optimization Services option Language</other>					<other name="OSrL" link="http://www.optimizationservices.org/schemas/OSrL.xsd">Optimization Services result Language</other>				</otherInformation>			</problem>			<variables minNumberOfVariables="1" maxNumberOfVariables="1000000000">				<type>					<continuous minNumber="1">moreGeneral</continuous>					<binary>moreGeneral</binary>					<integer>specialized</integer>					<string>none</string>				</type>				<boundedness>					<leftBounded minNumber="1">specialized</leftBounded>					<rightBounded>specialized</rightBounded>					<bounded>specialized</bounded>					<equallyBounded >moreGeneral</equallyBounded>					<unbounded>moreGeneral</unbounded>				</boundedness>				<linearity>					<linear>moreGeneral</linear>					<quadratic>moreGeneral</quadratic>					<nonlinear>specialized</nonlinear>				</linearity>			</variables>			<objectives minNumberOfObjectives="1" maxNumberOfObjectives="1">				<linearity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<quadratic>moreGeneral</quadratic>					<nonlinear>specialized</nonlinear>				</linearity>				<convexity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<convex>specialized</convex>					<convexStrict>specialized</convexStrict>					<nonconvex>approximate</nonconvex>					<concave>approximate</concave>					<concaveStrict>approximate</concaveStrict>					<nonconcave>approximate</nonconcave>					<notConvexOrConcave>approximate</notConvexOrConcave>				</convexity>				<continuity>					<continuous>specialized</continuous>					<discontinuous>none</discontinuous>				</continuity>				<differentialbility>					<differentiable order="1">approximate</differentiable>					<differentiable order="2">specialized</differentiable>					<nondifferentiable order="1">none</nondifferentiable>					<nondifferentiable order="2">approximate</nondifferentiable>				</differentialbility>			</objectives>			<constraints minNumberOfConstraints="0" maxNumberOfConstraints="1">				<constraintRegion>					<convexity>						<linear>specialized</linear>						<convex>specialized</convex>						<nonconvex>approximate</nonconvex>					</convexity>				</constraintRegion>				<boundedness>					<leftBounded minNumber="1">specialized</leftBounded>					<rightBounded>specialized</rightBounded>					<bounded>specialized</bounded>					<equallyBounded >specialized</equallyBounded>					<unbounded>moreGeneral</unbounded>				</boundedness>				<linearity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<quadratic>moreGeneral</quadratic>					<nonlinear>specialized</nonlinear>				</linearity>				<convexity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<convex>specialized</convex>					<convexStrict>specialized</convexStrict>					<nonconvex>approximate</nonconvex>					<concave>approximate</concave>					<concaveStrict>approximate</concaveStrict>					<nonconcave>approximate</nonconcave>					<notConvexOrConcave>approximate</notConvexOrConcave>				</convexity>				<continuity>					<continuous>specialized</continuous>					<discontinuous>none</discontinuous>				</continuity>				<differentialbility>					<differentiable order="1">approximate</differentiable>					<differentiable order="2">specialized</differentiable>					<nondifferentiable order="1">none</nondifferentiable>					<nondifferentiable order="2">approximate</nondifferentiable>				</differentialbility>			</constraints>			<linearConstraintCoefficient minNumberOfValues="0" maxNumberOfValues="100000">				<size>					<maxNumberOfRows>100000</maxNumberOfRows>					<maxNumberOfColumns>100000</maxNumberOfColumns>					<maxNumberOfSpecifiedValues>100000</maxNumberOfSpecifiedValues>					<maxNumberOfNonzeroValues>100000</maxNumberOfNonzeroValues>					<maxDensity>1.0</maxDensity>				</size>			</linearConstraintCoefficient>			<quadraticCoefficients minNumberOfQuadraticTerms="0" maxNumberOfQuadraticTerms="100000">				<maxNumberOfQuadraticVariables>100000</maxNumberOfQuadraticVariables>				<maxNumberOfQuadraticObjectives>1</maxNumberOfQuadraticObjectives>				<maxNumberOfQuadraticConstraints>100000</maxNumberOfQuadraticConstraints>			</quadraticCoefficients>			<nonlinearExpressions minNumberOfNonlinearExpressions="0" maxNumberOfNonlinearExpressions="10000000">				<nodes>					<nodeSetSupported NumberOfEl="1">						<el>plus</el>						<el>times</el>						<el>minus</el>						<el>square</el>						<el>divide</el>					</nodeSetSupported>					<statistics/>				</nodes>				<maxNumberOfNonlinearVariables>10000000</maxNumberOfNonlinearVariables>				<maxNumberOfNonlinearObjectives>1</maxNumberOfNonlinearObjectives>				<maxNumberOfNonlinearConstraints>10000000</maxNumberOfNonlinearConstraints>				<linearity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<quadratic>moreGeneral</quadratic>					<nonlinear>specialized</nonlinear>				</linearity>				<convexity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<convex>specialized</convex>					<convexStrict>specialized</convexStrict>					<nonconvex>approximate</nonconvex>					<concave>approximate</concave>					<concaveStrict>approximate</concaveStrict>					<nonconcave>approximate</nonconcave>					<notConvexOrConcave>approximate</notConvexOrConcave>				</convexity>				<continuity>					<continuous>specialized</continuous>					<discontinuous>none</discontinuous>				</continuity>				<differentialbility>					<differentiable order="1">approximate</differentiable>					<differentiable order="2">specialized</differentiable>					<nondifferentiable order="1">none</nondifferentiable>					<nondifferentiable order="2">approximate</nondifferentiable>				</differentialbility>			</nonlinearExpressions>			<specialOrderedSets/>						<matrices/>						<cones/>			<matrixProgramming/>			<disjunctiveInformation/>			<timeDomain/>			<robustOptimization/>			<stochasticInformation/>						<softConstraints/>						<ambiguityResolution/>			<modifications/>						<realTimeData/>			<userFunctions/>			<simulations/>			<xmlData/>		</optimization>		<defaultOption/>	</entityData></osel>