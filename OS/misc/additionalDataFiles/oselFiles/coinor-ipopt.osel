<?xml version="1.0" encoding="UTF-8"?><!--Sample XML file generated by XMLSPY v2004 rel. 3 U (http://www.xmlspy.com)--><osel xmlns="os.optimizationservices.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="os.optimizationservices.orghttp://www.optimizationservices.org/schemas/OSeL.xsd">	<entityHeader>		<serviceURI>http://www.coin-or.org/projects/Ipopt.os</serviceURI>		<serviceName>COIN-OR Ipopt Solver Service</serviceName>		<message>This is a mockup service</message>		<creationTime>2010-03-29T09:30:47-05:00</creationTime>		<registrationTime>2010-03-29T09:30:47-05:00</registrationTime>		<lastModificationTime>2010-03-29T09:30:47-05:00</lastModificationTime>		<licenseRequired>false</licenseRequired>		<userNameRequired>false</userNameRequired>		<passwordRequired>false</passwordRequired>		<keyWords numberOfKeyWords="2">			<keyWord>nonlinear programming</keyWord>			<keyWord>ipopt</keyWord>		</keyWords>		<otherInformation numberOfOtherInfo="1">			<other name="COIN-OR Ipopt Project" link="https://projects.coin-or.org/Ipopt">COIN-OR Ipopt Project Home</other>		</otherInformation>	</entityHeader>	<entityData>		<provider>					<association type="company">						<name>COIN-OR</name>						<description><![CDATA[ The Computational Infrastructure for Operations Research (COIN-OR**, or simply COIN)  project is an initiative to spur the development of open-source software for the operations research community.Why open source? The Open Source Initiative explains it well. When people can read, redistribute, and modify the source code, software evolves. People improve it, people adapt it, people fix bugs.  The results of open-source development have been remarkable. Community-based efforts to develop software under open-source licenses have produced high-quality, high-performance code---code on which much of the Internet is run.Why for OR?  Consider the following scenario. You read about an optimization algorithm in the literature and you get an idea on how to improve it.  Today,  testing your new idea typically requires re-implementing (and re-debugging and re-testing) the original algorithm.  Often, clever implementation details aren't published. It can be difficult to replicate reported performance.  Now imagine the scenario if the original algorithm was publicly available in a community repository. Weeks of re-implementing would no longer be required. You would simply check out a copy of it for yourself and modify it.  Imagine the productivity gains from software reuse!Our goal is to create for mathematical software what the open literature is for mathematical theory.We are building an open-source community for operations research software in order to speed development and deployment of models, algorithms, and cutting-edge computational research, as well as provide a forum for peer review of software similar to that provided by archival journals for theoretical research.   This is a lofty goal, but we believe it's a worthwhile one.  We have ideas, but we don't have all the answers. Only the community of users and contributors can define what is needed to make it a reality. For further information, please see the FAQs page, as well as the COIN-OR resources page. 												]]></description>						<web>http://www.coin-or.org/</web>						<logoImageURL uri="http://www.coin-or.org/images/COIN-OR_CMYK-296.png">COIN-OR</logoImageURL>					</association>			<contacts numberOfContacts="2">				<contact isMain="true">					<name>						<lastName>Wächter</lastName>						<firstName>Andreas</firstName>					</name>					<role>Project Manager</role>					<description>I am a member of the Mathematical Sciences Department at IBM's  T.J. Watson Research Center. Before joining IBM in 2002, I received my Ph.D from the Department of Chemical Engineering  at Carnegie Mellon University.My main research interest is the design, analysis, and implementation of algorithms for large-scale nonlinear optimization, as well as their application to engineering problems, such as process systems engineering and circuit tuning. Our optimization code IPOPT implementing an interior point method for large-scale nonlinear optimization is available as open source code from COIN-OR.  Recent work also includes the solution of mixed-integer nonlinear optimization problems.										</description>					<address>Department of Mathematical Sciences, IBM T.J. Watson Research Center, P.O. Box 218, Yorktown Heights, NY 10598, U.S.A.</address>					<phone>(001)9149452061</phone>					<fax>(001)914 9453434</fax>					<web>http://www.research.ibm.com/people/a/andreasw/</web>					<email>andreasw@watson.ibm.com</email>					<association type="organization">						<name>IBM T.J. Watson Research Center</name>						<description><![CDATA[ IBM Research is a center for basic and applied research in the mathematical sciences and related areas. Mathematical Sciences has three objectives:• To conduct research on a broad range of theoretical and applied topics.• To work with the IBM Corporation and its customers to help solve business problems.• To collaborate across IBM units to deliver these solutions effectively.IBM Research deals with every aspect of information technology -- hardware, software, systems and applications. Mathematical Sciences affects all of these, contributing to more efficient arithmetic calculations on chips, participating in the invention of the ThinkPad Trackpoint and aiding in the creation of sophisticated systems to evaluate and manage risk, to name a few.Researchers in Mathematical Sciences are also active in the global scientific community. For an overview of our activities, see “Research Areas” in the right-hand navigation bar. 						]]></description>						<address>IBM T.J. Watson Research Center, Yorktown Heights, NY 10598 U.S.A.</address>						<web>http://domino.research.ibm.com/comm/research.nsf/pages/d.math.html</web>						<logoImageURL uri="http://www.ibm.com/i/v16/t/ibm-logo.gif">IBM</logoImageURL>					</association>				</contact>				<contact isMain="false">					<name>						<lastName>Laird</lastName>						<firstName>Carl</firstName>					</name>					<role>Project Manager</role>					<description>Carl Laird's research focuses on large-scale nonlinear optimization, parameter estimation, and parallel computing. Particular applications include network problems, where Dr. Laird has worked on developing algorithms as part of an early warning contaminant detection system in municipal drinking water networks. In addition, Dr. Laird is involved in the modeling and optimization of infectious diseases, working to determine the fundamental driving forces affecting the spread of infectious disease in both time and space.								</description>					<address>205 Jack E. Brown Engineering Building, 3122 TAMU, College Station, TX 77843-3122, U.S.A.</address>					<phone>(001)9794584514</phone>					<fax>(001)979845-6446</fax>					<web>http://www.che.tamu.edu/people/faculty/info?fid=73</web>					<email>carl.laird@tamu.edu</email>					<association type="education">						<name>Department of hemical Engineering, Texas A&amp;M University</name>						<address>Texas A&amp;M University, Jack E. Brown Engineering Building, 3122 TAMU Room 200, College Station, TX 77843-3122 U.S.A.</address>						<web>http://www.che.tamu.edu/</web>						<logoImageURL uri="http://www.che.tamu.edu/wp-content/themes/che2.1/images/atmlogo.png">Texas A&amp;M University</logoImageURL>					</association>				</contact>			</contacts>			<keyWords numberOfKeyWords="3">				<keyWord>Texas A&amp;M University</keyWord>				<keyWord>IBM T.J. Watson Research Center</keyWord>				<keyWord>COIN-OR</keyWord>			</keyWords>			<otherInformation numberOfOtherInfo="3">				<other name="Laird Research Group" link="http://optimal.tamu.edu/research/">Our expertise includes large-scale modeling, design and operations under uncertainty, parameter estimation, and inversion. Research applications include traditional chemical engineering processes, in addition to homeland security applications, infectious disease modeling and estimation, and network problems.</other>				<other name="COIN-OR Ipopt Project" link="https://projects.coin-or.org/Ipopt">COIN-OR Ipopt Project</other>				<other name="Chemical Engineering, Carnegie Melon Univeristy" link="http://www.cheme.cmu.edu/index.htm">Chemical Engineering, Carnegie Melon Univeristy</other>			</otherInformation>		</provider>		<system>			<description>This is a mock up</description>			<dedication isFullyDedicated="true">fully dedicated as a COIN server for Ipopt Optimization Services.</dedication>			<operatingSystem>Ubuntu Linux</operatingSystem>			<keyWords numberOfKeyWords="2">				<keyWord>Ubuntu</keyWord>				<keyWord>Linux</keyWord>			</keyWords>			<otherInformation numberOfOtherInfo="2">				<other name="Ubuntu Linux" link="http://www.ubuntu.com/">Ubuntu Linux</other>			</otherInformation>		</system>		<service>			<description>Ipopt solver service dedicated by IBM</description>			<type>solver</type>			<wsdlLocation>http://www.coin-or.org/projects/Ipopt.os?wsdl</wsdlLocation>			<version>1.0</version>			<software>				<name>Ipopt</name>				<version>3.8</version>				<description>Ipopt is an open-source solver for large-scale nonlinear continuous optimization. It can be used from modeling environments, such as AMPL, GAMS, or Matlab, and it is also available as callable library with interfaces to C++, C, and Fortran. Ipopt uses an interior point method, together with a filter linear search procedure. Third-party Software:Package	Required/OptionalBlas 	Required (any implementation)Lapack 	Optional (any implementation)Ampl Solver Library 	OptionalA sparse linear solver (MA27, MA57, WSMP, Pardiso, MUMPS) 	Required (at least one) Development Status:Activity Status:	ActiveMaturity Level:	4				</description>				<author>Carl Laird, Andreas Wächter</author>				<license>CPL</license>				<language>C++</language>				<algorithm><![CDATA[Main algorithm: interior point. Ipopt (Interior Point OPTimizer, pronounced I-P-Opt) is a software package for large-scale  nonlinear optimization. It is designed to find (local) solutions of mathematical optimization problems of the from   min     f(x)x in R^ns.t.       g_L <= g(x) <= g_U           x_L <=  x   <= x_Uwhere f(x): R^n --> R is the objective function, and g(x): R^n --> R^m are the constraint functions. The vectors g_L and g_U denote the lower and upper bounds on the constraints, and the vectors x_L and x_U are the bounds on the variables x. The functions f(x) and g(x) can be nonlinear and nonconvex, but should be twice continuously differentiable. Note that equality constraints can be formulated in the above formulation by setting the corresponding components of g_L and g_U to the same value. 								]]></algorithm>				<otherInformation numberOfOtherInfo="3">					<other name="COIN-Ipopt Project" link="https://projects.coin-or.org/Ipopt">COIN-OR Ipopt</other>					<other name="COIN-Ipopt Documentation" link="http://www.coin-or.org/Ipopt/documentation/">A tutorial for downloading, installing, and using IPOPT.</other>					<other name="AMPL" link="http://www.ampl.com/">AMPL, A Modeling Language for Mathematical Programming</other>					<other name="CPL" link="http://www.opensource.org/licenses/cpl1.0.php">Common Public License</other>				</otherInformation>			</software>			<maxJobs>50</maxJobs>			<keyWords numberOfKeyWords="4">				<keyWord>interior point</keyWord>				<keyWord> Carl Laird</keyWord>				<keyWord> Andreas Wächter</keyWord>				<keyWord>COIN-OR</keyWord>			</keyWords>			<otherInformation numberOfOtherInfo="1">				<other name="COIN-OR Bonmin Solver Service" link="http://www.coin-or.org/projects/Bonmin.os?wsdl">COIN-OR Bonmin Service contributed from the same provider.</other>			</otherInformation>		</service>		<job>			<description>The solver service takes almost any job, but no guarantee that a job will be successfully run`.</description>			<maxTime unit="hour">10</maxTime>			<systemRestriction/>			<keyWords numberOfKeyWords="0"/>			<otherInformation numberOfOtherInfo="0"/>		</job>		<optimization>			<problem>				<type>nonlinear program</type>				<maxSize unit="byte">2048576</maxSize>				<keyWords numberOfKeyWords="1">					<keyWord>nonlinear</keyWord>				</keyWords>				<otherInformation numberOfOtherInfo="4">					<other name="nonlinear program" link="http://en.wikipedia.org/wiki/Nonlinear_programming">nonlinear program</other>					<other name="OSiL" link="http://www.optimizationservices.org/schemas/OSiL.xsd">Optimization Services instance Language</other>					<other name="OSoL" link="http://www.optimizationservices.org/schemas/OSoL.xsd">Optimization Services option Language</other>					<other name="OSrL" link="http://www.optimizationservices.org/schemas/OSrL.xsd">Optimization Services result Language</other>				</otherInformation>			</problem>			<variables minNumberOfVariables="1" maxNumberOfVariables="1000000000">				<type>					<continuous minNumber="1">specialized</continuous>					<binary>none</binary>					<integer>none</integer>					<string>none</string>				</type>				<boundedness>					<leftBounded minNumber="1">specialized</leftBounded>					<rightBounded>specialized</rightBounded>					<bounded>specialized</bounded>					<equallyBounded >moreGeneral</equallyBounded>					<unbounded>moreGeneral</unbounded>				</boundedness>				<linearity>					<linear>moreGeneral</linear>					<quadratic>moreGeneral</quadratic>					<nonlinear>specialized</nonlinear>				</linearity>			</variables>			<objectives minNumberOfObjectives="1" maxNumberOfObjectives="1">				<linearity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<quadratic>moreGeneral</quadratic>					<nonlinear>specialized</nonlinear>				</linearity>				<convexity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<convex>specialized</convex>					<convexStrict>specialized</convexStrict>					<nonconvex>approximate</nonconvex>					<concave>approximate</concave>					<concaveStrict>approximate</concaveStrict>					<nonconcave>approximate</nonconcave>					<notConvexOrConcave>approximate</notConvexOrConcave>				</convexity>				<continuity>					<continuous>specialized</continuous>					<discontinuous>none</discontinuous>				</continuity>				<differentialbility>					<differentiable order="1">approximate</differentiable>					<differentiable order="2">specialized</differentiable>					<nondifferentiable order="1">none</nondifferentiable>					<nondifferentiable order="2">approximate</nondifferentiable>				</differentialbility>			</objectives>			<constraints minNumberOfConstraints="0" maxNumberOfConstraints="1">				<constraintRegion>					<convexity>						<linear>specialized</linear>						<convex>specialized</convex>						<nonconvex>approximate</nonconvex>					</convexity>				</constraintRegion>				<boundedness>					<leftBounded minNumber="1">specialized</leftBounded>					<rightBounded>specialized</rightBounded>					<bounded>specialized</bounded>					<equallyBounded >specialized</equallyBounded>					<unbounded>moreGeneral</unbounded>				</boundedness>				<linearity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<quadratic>moreGeneral</quadratic>					<nonlinear>specialized</nonlinear>				</linearity>				<convexity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<convex>specialized</convex>					<convexStrict>specialized</convexStrict>					<nonconvex>approximate</nonconvex>					<concave>approximate</concave>					<concaveStrict>approximate</concaveStrict>					<nonconcave>approximate</nonconcave>					<notConvexOrConcave>approximate</notConvexOrConcave>				</convexity>				<continuity>					<continuous>specialized</continuous>					<discontinuous>none</discontinuous>				</continuity>				<differentialbility>					<differentiable order="1">approximate</differentiable>					<differentiable order="2">specialized</differentiable>					<nondifferentiable order="1">none</nondifferentiable>					<nondifferentiable order="2">approximate</nondifferentiable>				</differentialbility>			</constraints>			<linearConstraintCoefficient minNumberOfValues="0" maxNumberOfValues="1000000">				<size>					<maxNumberOfRows>1000000</maxNumberOfRows>					<maxNumberOfColumns>1000000</maxNumberOfColumns>					<maxNumberOfSpecifiedValues>1000000</maxNumberOfSpecifiedValues>					<maxNumberOfNonzeroValues>1000000</maxNumberOfNonzeroValues>					<maxDensity>1.0</maxDensity>				</size>			</linearConstraintCoefficient>			<quadraticCoefficients minNumberOfQuadraticTerms="0" maxNumberOfQuadraticTerms="1000000">				<maxNumberOfQuadraticVariables>1000000</maxNumberOfQuadraticVariables>				<maxNumberOfQuadraticObjectives>1</maxNumberOfQuadraticObjectives>				<maxNumberOfQuadraticConstraints>1000000</maxNumberOfQuadraticConstraints>			</quadraticCoefficients>			<nonlinearExpressions minNumberOfNonlinearExpressions="0" maxNumberOfNonlinearExpressions="10000000">				<nodes>					<nodeSetSupported NumberOfEl="1">						<el>plus</el>						<el>times</el>						<el>minus</el>						<el>square</el>						<el>divide</el>					</nodeSetSupported>					<statistics/>				</nodes>				<maxNumberOfNonlinearVariables>10000000</maxNumberOfNonlinearVariables>				<maxNumberOfNonlinearObjectives>1</maxNumberOfNonlinearObjectives>				<maxNumberOfNonlinearConstraints>10000000</maxNumberOfNonlinearConstraints>				<linearity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<quadratic>moreGeneral</quadratic>					<nonlinear>specialized</nonlinear>				</linearity>				<convexity>					<constant>moreGeneral</constant>					<linear>moreGeneral</linear>					<convex>specialized</convex>					<convexStrict>specialized</convexStrict>					<nonconvex>approximate</nonconvex>					<concave>approximate</concave>					<concaveStrict>approximate</concaveStrict>					<nonconcave>approximate</nonconcave>					<notConvexOrConcave>approximate</notConvexOrConcave>				</convexity>				<continuity>					<continuous>specialized</continuous>					<discontinuous>none</discontinuous>				</continuity>				<differentialbility>					<differentiable order="1">approximate</differentiable>					<differentiable order="2">specialized</differentiable>					<nondifferentiable order="1">none</nondifferentiable>					<nondifferentiable order="2">approximate</nondifferentiable>				</differentialbility>			</nonlinearExpressions>			<specialOrderedSets/>						<matrices/>						<cones/>			<matrixProgramming/>			<disjunctiveInformation/>			<timeDomain/>			<robustOptimization/>			<stochasticInformation/>						<softConstraints/>						<ambiguityResolution/>			<modifications/>						<realTimeData/>			<userFunctions/>			<simulations/>			<xmlData/>		</optimization>		<defaultOption/>	</entityData></osel>